
-- External participants (for people not in the persons table)
CREATE TABLE external_participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    contact_number VARCHAR(20),
    address VARCHAR(255),
    age INT,
    gender ENUM('Male', 'Female', 'Others'),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Main blotter case information
CREATE TABLE blotter_cases (
    id INT AUTO_INCREMENT PRIMARY KEY,
    case_number VARCHAR(50) UNIQUE,
    incident_date DATETIME,
    location VARCHAR(200),
    description TEXT,
    status ENUM('pending', 'open', 'closed', 'completed', 'transferred', 'solved', 'endorsed_to_court', 'cfa_eligible', 'deleted') DEFAULT 'pending',
    scheduling_status ENUM('none', 'pending_schedule', 'schedule_proposed', 'schedule_confirmed', 'scheduled', 'completed', 'cancelled') DEFAULT 'none',
    barangay_id INT,
    reported_by_person_id INT,
    assigned_to_user_id INT,
    scheduled_hearing DATETIME,
    resolution_details TEXT,
    resolved_at DATETIME,
    is_cfa_eligible BOOLEAN DEFAULT FALSE,
    cfa_issued_at DATETIME NULL,
    endorsed_to_court_at DATETIME NULL,
    hearing_count INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (barangay_id) REFERENCES barangay(id) ON DELETE SET NULL,
    FOREIGN KEY (reported_by_person_id) REFERENCES persons(id) ON DELETE SET NULL,
    FOREIGN KEY (assigned_to_user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- People involved in blotter cases
CREATE TABLE blotter_participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    person_id INT,
    external_participant_id INT,
    role ENUM('complainant', 'respondent', 'witness') NOT NULL,
    statement TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_case_person_role (blotter_case_id, person_id, role),
    UNIQUE KEY uk_case_external_role (blotter_case_id, external_participant_id, role),
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (person_id) REFERENCES persons(id) ON DELETE CASCADE,
    FOREIGN KEY (external_participant_id) REFERENCES external_participants(id) ON DELETE CASCADE
);

-- Case-category relationship
CREATE TABLE blotter_case_categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    category_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY uk_case_category (blotter_case_id, category_id),
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES case_categories(id) ON DELETE CASCADE
);

-- Case-intervention relationship
CREATE TABLE blotter_case_interventions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    intervention_id INT NOT NULL,
    intervened_at DATETIME NOT NULL,
    performed_by VARCHAR(100),
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_case_intervention_date (blotter_case_id, intervention_id, intervened_at),
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (intervention_id) REFERENCES case_interventions(id) ON DELETE CASCADE
);

-- Case hearings and mediation
CREATE TABLE case_hearings (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    hearing_date DATETIME NOT NULL,
    hearing_type ENUM('initial', 'mediation', 'conciliation', 'final') NOT NULL,
    hearing_notes TEXT,
    hearing_outcome ENUM('scheduled', 'conducted', 'postponed', 'resolved', 'failed') DEFAULT 'scheduled',
    presided_by_user_id INT,
    next_hearing_date DATETIME,
    hearing_number INT DEFAULT 1,
    presiding_officer_name VARCHAR(100) NULL,
    presiding_officer_position VARCHAR(100) NULL,
    is_mediation_successful BOOLEAN DEFAULT FALSE,
    resolution_details TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (presided_by_user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- Case hearing attendees
CREATE TABLE hearing_attendances (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hearing_id INT NOT NULL,
    participant_id INT NOT NULL,
    is_present BOOLEAN DEFAULT FALSE,
    remarks VARCHAR(255),
    participant_type VARCHAR(20) NULL,
    attendance_remarks TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_hearing_participant (hearing_id, participant_id),
    FOREIGN KEY (hearing_id) REFERENCES case_hearings(id) ON DELETE CASCADE,
    FOREIGN KEY (participant_id) REFERENCES blotter_participants(id) ON DELETE CASCADE
);

-- CFA certificates
CREATE TABLE cfa_certificates (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    complainant_person_id INT NULL,
    issued_by_user_id INT NULL,
    certificate_number VARCHAR(50) NOT NULL,
    issued_at DATETIME NOT NULL,
    reason VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (complainant_person_id) REFERENCES persons(id) ON DELETE SET NULL,
    FOREIGN KEY (issued_by_user_id) REFERENCES users(id) ON DELETE SET NULL
);

/*-------------------------------------------------------------
  SECTION 5: EVENTS & REPORTING SYSTEM
  -------------------------------------------------------------*/

-- Event management
CREATE TABLE events (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    description TEXT,
    start_datetime DATETIME NOT NULL,
    end_datetime DATETIME NOT NULL,
    location VARCHAR(200) NOT NULL,
    organizer VARCHAR(100),
    barangay_id INT NOT NULL,
    created_by_user_id INT NOT NULL,
    status ENUM('scheduled', 'ongoing', 'completed', 'postponed', 'cancelled') DEFAULT 'scheduled',
    max_participants INT DEFAULT NULL,
    registration_required BOOLEAN DEFAULT FALSE,
    registration_deadline DATETIME DEFAULT NULL,
    event_type ENUM('meeting', 'seminar', 'activity', 'celebration', 'emergency', 'other') DEFAULT 'other',
    contact_person VARCHAR(100),
    contact_number VARCHAR(20),
    requirements TEXT,
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (barangay_id) REFERENCES barangay(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by_user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Event participants
CREATE TABLE event_participants (
    id INT AUTO_INCREMENT PRIMARY KEY,
    event_id INT NOT NULL,
    person_id INT NOT NULL,
    attendance_status ENUM('registered', 'confirmed', 'attended', 'no_show') DEFAULT 'registered',
    remarks VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_event_person (event_id, person_id),
    FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
    FOREIGN KEY (person_id) REFERENCES persons(id) ON DELETE CASCADE
);

-- Monthly report tracking
CREATE TABLE monthly_reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    barangay_id INT NOT NULL,
    report_month INT NOT NULL,
    report_year INT NOT NULL,
    created_by_user_id INT NOT NULL,
    prepared_by_user_id INT NULL,
    submitted_at DATETIME NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_barangay_month_year (barangay_id, report_month, report_year),
    FOREIGN KEY (barangay_id) REFERENCES barangay(id) ON DELETE CASCADE,
    FOREIGN KEY (created_by_user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (prepared_by_user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- Monthly report details by category
CREATE TABLE monthly_report_details (
    id INT AUTO_INCREMENT PRIMARY KEY,
    monthly_report_id INT NOT NULL,
    category_id INT NOT NULL,
    total_cases INT DEFAULT 0,
    total_pnp INT DEFAULT 0,
    total_court INT DEFAULT 0,
    total_issued_bpo INT DEFAULT 0,
    total_medical INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_report_category (monthly_report_id, category_id),
    FOREIGN KEY (monthly_report_id) REFERENCES monthly_reports(id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES case_categories(id) ON DELETE CASCADE
);

/*-------------------------------------------------------------
  SECTION 6: SYSTEM TABLES (AUDIT, TOKENS, SESSIONS)
  -------------------------------------------------------------*/

-- System activity auditing
CREATE TABLE audit_trails (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    admin_user_id INT,
    action VARCHAR(50) NOT NULL,
    table_name VARCHAR(100),
    record_id VARCHAR(100),
    old_values TEXT,
    new_values TEXT,
    description VARCHAR(255),
    ip_address VARCHAR(45),
    user_agent VARCHAR(255),
    action_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Scheduling and notifications
CREATE TABLE schedule_proposals (
    id INT PRIMARY KEY AUTO_INCREMENT,
    blotter_case_id INT NOT NULL,
    proposed_by_user_id INT NOT NULL,
    proposed_date DATE NOT NULL,
    proposed_time TIME NOT NULL,
    hearing_location VARCHAR(255) NOT NULL,
    presiding_officer VARCHAR(100) NOT NULL,
    presiding_officer_position VARCHAR(50) NOT NULL,
    status ENUM('proposed', 'user_confirmed', 'captain_confirmed', 'both_confirmed', 'conflict', 'pending_user_confirmation', 'pending_officer_confirmation', 'cancelled') NOT NULL DEFAULT 'proposed',
    user_confirmed BOOLEAN DEFAULT FALSE,
    user_confirmed_at DATETIME,
    captain_confirmed BOOLEAN DEFAULT FALSE,
    captain_confirmed_at DATETIME,
    confirmed_by_role INT,
    user_remarks TEXT,
    captain_remarks TEXT,
    conflict_reason TEXT,
    complainant_confirmed  BOOLEAN DEFAULT FALSE,
    respondent_confirmed  BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id),
    FOREIGN KEY (proposed_by_user_id) REFERENCES users(id),
    FOREIGN KEY (confirmed_by_role) REFERENCES roles(id)
);


-- Email logs
CREATE TABLE email_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    to_email VARCHAR(255) NOT NULL,
    subject VARCHAR(255) NOT NULL,
    template_used VARCHAR(100),
    sent_at DATETIME NOT NULL,
    status ENUM('sent', 'failed', 'pending') DEFAULT 'pending',
    error_message TEXT NULL,
    blotter_case_id INT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE SET NULL
);

-- Notifications
CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    type VARCHAR(50) NOT NULL DEFAULT 'general',
    title VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    related_table VARCHAR(100) NULL,
    related_id INT NULL,
    action_url VARCHAR(255) NULL,
    is_read BOOLEAN DEFAULT FALSE,
    read_at DATETIME NULL,
    priority ENUM('low', 'medium', 'high', 'urgent') DEFAULT 'medium',
    expires_at DATETIME NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_user_id (user_id),
    INDEX idx_type (type),
    INDEX idx_is_read (is_read),
    INDEX idx_created_at (created_at),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Hearing schedules
CREATE TABLE hearing_schedules (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hearing_date DATE NOT NULL,
    hearing_time TIME NOT NULL,
    location VARCHAR(255) DEFAULT 'Barangay Hall',
    max_hearings_per_slot INT DEFAULT 5,
    current_bookings INT DEFAULT 0,
    is_available BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Password reset tokens
CREATE TABLE password_reset_tokens (
    email VARCHAR(100) PRIMARY KEY,
    token VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (email) REFERENCES users(email) ON DELETE CASCADE
);

-- Personal access tokens (for API authentication)
CREATE TABLE personal_access_tokens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    tokenable_type VARCHAR(255) NOT NULL,
    tokenable_id INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    token VARCHAR(64) NOT NULL UNIQUE,
    abilities TEXT,
    last_used_at TIMESTAMP NULL,
    expires_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_tokenable (tokenable_type, tokenable_id)
);

-- Sessions table (for web sessions)
CREATE TABLE sessions (
    id VARCHAR(255) PRIMARY KEY,
    user_id INT NULL,
    ip_address VARCHAR(45) NULL,
    user_agent TEXT NULL,
    payload LONGTEXT NOT NULL,
    last_activity INT NOT NULL,
    INDEX idx_sessions_user_id (user_id),
    INDEX idx_sessions_last_activity (last_activity)
);

/*-------------------------------------------------------------
  SECTION 7: SAMPLE DATA INSERTION
  -------------------------------------------------------------*/

-- Insert sample users
INSERT INTO users (email, password, role_id, barangay_id, first_name, last_name, gender, email_verified_at, is_active) VALUES
    ('programmer@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 1, 1, 'System', 'Programmer', 'Male', NOW(), TRUE),
    ('superadmin@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 2, 1, 'Super', 'Administrator', 'Female', NOW(), TRUE),
    ('barangayadmin@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 4, 32, 'Barangay', 'Administrator', 'Male', NOW(), TRUE),
    ('captain.tambubong@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 3, 32, 'Juan', 'Dela Cruz', 'Male', NOW(), TRUE),
    ('resident1@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 8, 32, 'Test', 'Resident', 'Male', NOW(), TRUE),
    ('neilardrey14@gmail.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 8, 32, 'Neil', 'Ardrey', 'Male', NOW(), TRUE),
    ('captain.pantubig@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 3, 18, 'Maria', 'Santos', 'Female', NOW(), TRUE),
    ('captain.caingin@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 3, 3, 'Roberto', 'Reyes', 'Male', NOW(), TRUE),
    ('chiefOfficer.tambubong@barangay.com', '$2y$10$YavXAnllLC3VCF8R0eVxXeWu/.mawVifHel6BYiU2H5oxCz8nfMIm', 7, 32, 'Ricardo', 'Morales', 'Male', NOW(), TRUE);

-- Insert sample persons
INSERT INTO persons (user_id, first_name, last_name, birth_date, birth_place, gender, civil_status) VALUES
    (1, 'System', 'Programmer', '1990-01-01', 'Manila', 'MALE', 'SINGLE'),
    (2, 'Super', 'Administrator', '1985-01-01', 'Quezon City', 'FEMALE', 'MARRIED'),
    (3, 'Barangay', 'Administrator', '1980-01-01', 'San Rafael', 'MALE', 'MARRIED'),
    (4, 'Juan', 'Dela Cruz', '1970-01-01', 'San Rafael', 'MALE', 'MARRIED'),
    (5, 'Test', 'Resident', '1990-01-01', 'Manila', 'MALE', 'SINGLE'),
    (6, 'Neil', 'Ardrey', '1992-05-15', 'San Rafael', 'MALE', 'SINGLE'),
    (7, 'Maria', 'Santos', '1975-03-15', 'Bulacan', 'FEMALE', 'MARRIED'),
    (8, 'Roberto', 'Reyes', '1970-08-22', 'Bulacan', 'MALE', 'MARRIED'),
    (9, 'Ricardo', 'Morales', '1968-11-10', 'Bulacan', 'MALE', 'MARRIED');

-- Insert additional residents without user accounts
INSERT INTO persons (first_name, middle_name, last_name, birth_date, birth_place, gender, civil_status, occupation, contact_number) VALUES
    ('Luis', 'Manalo', 'Santos', '1995-02-14', 'San Rafael', 'MALE', 'SINGLE', 'Engineer', '09112233445'),
    ('Sofia', 'Alcantara', 'Reyes', '1988-11-30', 'San Rafael', 'FEMALE', 'MARRIED', 'Business Owner', '09223344556'),
    ('Miguel', 'Tolentino', 'Cruz', '1972-07-22', 'San Rafael', 'MALE', 'WIDOW/WIDOWER', 'Fisherman', '09334455667'),
    ('Carlos', 'Santos', 'Dela Cruz', '1980-05-15', 'San Rafael', 'MALE', 'MARRIED', 'Farmer', '09123456789'),
    ('Elena', 'Garcia', 'Santos', '1985-08-20', 'San Rafael', 'FEMALE', 'MARRIED', 'Teacher', '09987654321'),
    ('Pedro', 'Ramos', 'Gonzales', '1975-12-10', 'San Rafael', 'MALE', 'SINGLE', 'Driver', '09111222333'),
    ('Ana', 'Flores', 'Reyes', '1990-03-25', 'San Rafael', 'FEMALE', 'SINGLE', 'Nurse', '09444555666');

-- Insert User Roles
INSERT INTO user_roles (user_id, role_id, barangay_id, is_active, start_term_date, end_term_date) VALUES
    (1, 1, 1, TRUE, NULL, NULL),
    (2, 2, 1, TRUE, NULL, NULL),
    (3, 4, 32, TRUE, NULL, NULL),
    (4, 3, 32, TRUE, '2023-01-01', '2025-12-31'),
    (5, 8, 32, TRUE, NULL, NULL),
    (6, 8, 32, TRUE, NULL, NULL),
    (7, 3, 18, TRUE, '2023-01-01', '2025-12-31'),
    (8, 3, 3, TRUE, '2023-01-01', '2025-12-31'),
    (9, 3, 1, TRUE, '2023-01-01', '2025-12-31');

-- Insert Addresses
INSERT INTO addresses (person_id, barangay_id, house_no, street, residency_type, years_in_san_rafael, is_primary) VALUES
    (10, 32, '101', 'Mabini Extension', 'Home Owner', 8, TRUE),
    (11, 32, '202', 'Rizal Street', 'Home Owner', 12, TRUE),
    (12, 32, '303', 'Rivera Compound', 'Home Owner', 25, TRUE),
    (13, 18, '456', 'Rizal Avenue', 'Renter', 8, TRUE),
    (14, 3, '789', 'Luna Street', 'Home Owner', 20, TRUE),
    (15, 32, '321', 'Bonifacio Road', 'Boarder', 3, TRUE),
    (16, 18, '654', 'Aguinaldo Street', 'Home Owner', 12, TRUE);

-- Insert Barangay Settings
INSERT INTO barangay_settings (barangay_id, barangay_captain_name, local_barangay_contact, pnp_contact, bfp_contact) VALUES
    (32, 'Juan Dela Cruz', '0917-555-1234', '0917-555-5678', '0917-555-9012'),
    (18, 'Maria Santos', '0917-555-4321', '0917-555-8765', '0917-555-2109'),
    (3, 'Roberto Reyes', '0917-555-1122', '0917-555-3344', '0917-555-5566'),
    (1, 'Ricardo Morales', '0917-555-7890', '0917-555-1357', '0917-555-2468');

-- Insert Document Attribute Types
INSERT INTO document_attribute_types (document_type_id, name, code, description, is_required) VALUES
    (1, 'Purpose for Clearance', 'clearance_purpose', 'Purpose for barangay clearance', TRUE),
    (3, 'Duration of Residency', 'residency_duration', 'How long the requester has resided', TRUE),
    (3, 'Purpose for Certificate', 'residency_purpose', 'Purpose for certificate of residency', TRUE),
    (4, 'Purpose for Certificate', 'indigency_purpose', 'Purpose for indigency certificate', TRUE),
    (4, 'Stated Income', 'indigency_income', 'Stated income for indigency cert.', TRUE),
    (4, 'Reason for Request', 'indigency_reason', 'Reason for requesting indigency cert.', TRUE),
    (5, 'Tax Amount', 'cedula_amount', 'Tax amount for cedula', TRUE);

-- Insert External Participants
INSERT INTO external_participants (first_name, last_name, contact_number, address, age, gender) VALUES
    ('Carlos', 'Rivera', '09888777666', 'Unknown Street, Tambubong', 35, 'Male'),
    ('Elena', 'Cruz', '09555444333', 'Somewhere in Pantubig', 28, 'Female');

-- Insert Blotter Cases
INSERT INTO blotter_cases (case_number, incident_date, location, description, status, barangay_id, reported_by_person_id) VALUES
    ('TAM-2024-0001', '2024-01-15 14:30:00', 'Mabini Street, Tambubong', 'Noise complaint against neighbor', 'open', 32, 10),
    ('PAN-2024-0001', '2024-01-20 09:15:00', 'Rizal Avenue, Pantubig', 'Property boundary dispute', 'pending', 18, 11),
    ('CAI-2024-0001', '2024-01-25 16:45:00', 'Luna Street, Caingin', 'Family dispute mediation', 'closed', 3, 12),
    ('TAM-2024-0002', '2024-02-10 20:00:00', 'Rizal Street, Tambubong', 'Property damage complaint', 'open', 32, 11);

-- Insert Blotter Participants
INSERT INTO blotter_participants (blotter_case_id, person_id, role, statement) VALUES
    (1, 10, 'complainant', 'Neighbor is playing loud music past 10 PM'),
    (2, 11, 'complainant', 'Neighbor built fence on my property'),
    (3, 12, 'complainant', 'Need help resolving family issues'),
    (4, 11, 'complainant', 'Neighbor destroyed my fence during argument'),
    (4, 12, 'respondent', 'Accident occurred while trimming trees');

INSERT INTO blotter_participants (blotter_case_id, external_participant_id, role, statement) VALUES
    (1, 1, 'respondent', 'We were just celebrating a birthday');

-- Insert Blotter Case Categories
INSERT INTO blotter_case_categories (blotter_case_id, category_id) VALUES
    (1, 8), (2, 8), (3, 8), (4, 8);

-- Insert Document Requests
INSERT INTO document_requests (person_id, document_type_id, barangay_id, requested_by_user_id, status) VALUES
    (10, 1, 32, 3, 'pending'),
    (11, 3, 32, 3, 'processing'),
    (12, 4, 32, 3, 'for_payment'),
    (13, 1, 32, 3, 'pending'),
    (14, 3, 32, 3, 'processing'),
    (15, 5, 32, 3, 'for_payment');

-- Insert Events
INSERT INTO events (title, description, start_datetime, end_datetime, location, barangay_id, created_by_user_id) VALUES
    ('Tambubong Cleanup Day', 'Monthly community cleanup', '2024-03-05 07:00:00', '2024-03-05 11:00:00', 'Tambubong Covered Court', 32, 3),
    ('Barangay Assembly', 'Monthly barangay assembly meeting', '2024-02-15 19:00:00', '2024-02-15 21:00:00', 'Barangay Hall', 32, 3),
    ('Health Fair', 'Free medical checkup and consultation', '2024-02-20 08:00:00', '2024-02-20 17:00:00', 'Covered Court', 18, 3),
    ('Clean-up Drive', 'Community clean-up activity', '2024-02-25 06:00:00', '2024-02-25 10:00:00', 'Various Streets', 3, 3);

-- Insert Event Participants
INSERT INTO event_participants (event_id, person_id) VALUES
    (1, 5), (1, 10), (1, 11), (1, 12),
    (2, 5), (2, 10), (2, 11);

-- Insert Audit Trails
INSERT INTO audit_trails (user_id, action, table_name, record_id, description) VALUES
    (3, 'LOGIN', 'users', '3', 'User logged into the system'),
    (3, 'VIEW', 'document_requests', '1', 'Viewed document request details'),
    (3, 'EXPORT', 'audit_trails', 'ALL', 'Exported audit trail report'),
    (3, 'FILTER', 'audit_trails', 'ALL', 'Applied filters to audit trail view');


-- Insert CFA Certificate
INSERT INTO cfa_certificates (blotter_case_id, complainant_person_id, issued_by_user_id, certificate_number, issued_at, reason) VALUES
    (1, 10, 4, 'TAM-CFA-2024-001', NOW(), 'Successful mediation between parties');

-- Update scheduling status for existing blotter cases
UPDATE blotter_cases 
SET scheduling_status = 'scheduled'
WHERE id > 0 AND scheduled_hearing IS NOT NULL AND scheduled_hearing > NOW();

UPDATE blotter_cases 
SET scheduling_status = 'completed'
WHERE id > 0 AND scheduled_hearing IS NOT NULL AND scheduled_hearing <= NOW();

UPDATE blotter_cases 
SET scheduling_status = 'pending_schedule'
WHERE id > 0 AND status IN ('open', 'pending') AND (scheduled_hearing IS NULL OR scheduling_status = 'none');

/*-------------------------------------------------------------
  SECTION 8: INDEXES FOR PERFORMANCE
  -------------------------------------------------------------*/

-- Add composite indexes for better performance
CREATE INDEX idx_doc_requests_status_barangay ON document_requests(status, barangay_id, request_date);
CREATE INDEX idx_doc_requests_person ON document_requests(person_id);
CREATE INDEX idx_doc_requests_doctype ON document_requests(document_type_id);
CREATE INDEX idx_blotter_cases_status ON blotter_cases(status, barangay_id);
CREATE INDEX idx_blotter_cases_scheduling ON blotter_cases(scheduling_status);
CREATE INDEX idx_persons_user_id ON persons(user_id);
CREATE INDEX idx_persons_census_id ON persons(census_id);
CREATE INDEX idx_addresses_person_id ON addresses(person_id);
CREATE INDEX idx_addresses_barangay_id ON addresses(barangay_id);
CREATE INDEX idx_household_members_household ON household_members(household_id);
CREATE INDEX idx_household_members_person ON household_members(person_id);
CREATE INDEX idx_events_barangay_date ON events(barangay_id, start_datetime);
CREATE INDEX idx_audit_trails_user_action ON audit_trails(user_id, action, action_timestamp);
CREATE INDEX idx_notifications_user_read ON notifications(user_id, is_read);





-- Add missing columns to custom_services table
ALTER TABLE custom_services 
ADD COLUMN service_type VARCHAR(50) DEFAULT 'general' AFTER barangay_id,
ADD COLUMN priority_level ENUM('normal', 'high', 'urgent') DEFAULT 'normal' AFTER display_order,
ADD COLUMN availability_type ENUM('always', 'scheduled', 'limited') DEFAULT 'always' AFTER priority_level,
ADD COLUMN additional_notes TEXT AFTER availability_type;

-- Add new status for blotter cases
ALTER TABLE blotter_cases 
MODIFY COLUMN status ENUM('pending', 'open', 'closed', 'completed', 'transferred', 'solved', 'endorsed_to_court', 'cfa_eligible', 'dismissed', 'deleted') DEFAULT 'pending';

-- Add new columns for case dismissal
ALTER TABLE blotter_cases
ADD COLUMN dismissed_by_user_id INT NULL AFTER resolved_at,
ADD COLUMN dismissal_reason TEXT NULL AFTER dismissed_by_user_id,
ADD COLUMN dismissal_date DATETIME NULL AFTER dismissal_reason,
ADD FOREIGN KEY (dismissed_by_user_id) REFERENCES users(id) ON DELETE SET NULL;

-- Add new columns for schedule proposals
ALTER TABLE schedule_proposals
ADD COLUMN proposed_by_role_id INT NOT NULL AFTER proposed_by_user_id,
ADD COLUMN notification_sent BOOLEAN DEFAULT FALSE AFTER status,
ADD COLUMN notification_sent_at DATETIME NULL AFTER notification_sent,
ADD FOREIGN KEY (proposed_by_role_id) REFERENCES roles(id) ON DELETE CASCADE;

-- Add indexes for better performance
CREATE INDEX idx_schedule_proposals_status ON schedule_proposals(status);
CREATE INDEX idx_blotter_cases_dismissed ON blotter_cases(dismissed_by_user_id, dismissal_date);


ALTER TABLE blotter_cases 
ADD COLUMN accepted_by_user_id INT NULL AFTER assigned_to_user_id,
ADD COLUMN accepted_by_role_id INT NULL AFTER accepted_by_user_id,
ADD COLUMN accepted_at DATETIME NULL AFTER accepted_by_role_id,
ADD COLUMN filing_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER incident_date,
ADD COLUMN scheduling_deadline DATETIME GENERATED ALWAYS AS (DATE_ADD(filing_date, INTERVAL 5 DAY)) STORED,
ADD COLUMN requires_dual_signature BOOLEAN DEFAULT FALSE AFTER hearing_count,
ADD COLUMN captain_signature_date DATETIME NULL AFTER requires_dual_signature,
ADD COLUMN chief_signature_date DATETIME NULL AFTER captain_signature_date,
ADD FOREIGN KEY (accepted_by_user_id) REFERENCES users(id) ON DELETE SET NULL,
ADD FOREIGN KEY (accepted_by_role_id) REFERENCES roles(id) ON DELETE SET NULL;

ALTER TABLE custom_services 
ADD COLUMN service_photo VARCHAR(255) AFTER additional_notes;

ALTER TABLE barangay.users ADD COLUMN chief_officer_esignature_path LONGBLOB NULL;

CREATE INDEX idx_users_esignature ON users(esignature_path);

ALTER TABLE users 
DROP COLUMN first_name,
DROP COLUMN last_name,
DROP COLUMN gender;
ALTER TABLE users 
MODIFY COLUMN chief_officer_esignature_path VARCHAR(255) NULL;

-- Update schedule_proposals to match the PHP expectations
ALTER TABLE schedule_proposals 
ADD COLUMN hearing_number INT DEFAULT 1 AFTER presiding_officer_position;

-- Ensure blotter_cases has the expected scheduling columns
ALTER TABLE blotter_cases 
MODIFY COLUMN scheduled_hearing VARCHAR(255) NULL;
ALTER TABLE blotter_cases 
ADD COLUMN hearing_attempts INT DEFAULT 0 AFTER hearing_count,
ADD COLUMN max_hearing_attempts INT DEFAULT 3 AFTER hearing_attempts,
ADD COLUMN cfa_reason TEXT NULL AFTER is_cfa_eligible;

-- Create participant_notifications table for summons delivery
CREATE TABLE IF NOT EXISTS participant_notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    participant_id INT NOT NULL,
    delivery_method ENUM('email', 'physical', 'phone') DEFAULT 'physical',
    delivery_status ENUM('pending', 'sent', 'delivered', 'failed') DEFAULT 'pending',
    delivered_at DATETIME NULL,
    delivery_address VARCHAR(255),
    delivery_notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (participant_id) REFERENCES blotter_participants(id) ON DELETE CASCADE
);

-- Add indexes for better performance
CREATE INDEX idx_participant_notifications_case ON participant_notifications(blotter_case_id);
CREATE INDEX idx_participant_notifications_participant ON participant_notifications(participant_id);
CREATE INDEX idx_participant_notifications_status ON participant_notifications(delivery_status);



-- Insert some sample participant notifications for testing
INSERT INTO participant_notifications (blotter_case_id, participant_id, delivery_method, delivery_status, delivery_address)
SELECT 
    bc.id,
    bp.id,
    CASE 
        WHEN u.email IS NOT NULL THEN 'email'
        ELSE 'physical'
    END,
    'pending',
    COALESCE(
        CONCAT(a.house_no, ' ', a.street, ', ', b.name),
        'Address not provided'
    )
FROM blotter_cases bc
JOIN blotter_participants bp ON bc.id = bp.blotter_case_id
LEFT JOIN persons p ON bp.person_id = p.id
LEFT JOIN users u ON p.user_id = u.id
LEFT JOIN addresses a ON p.id = a.person_id AND a.is_primary = TRUE
LEFT JOIN barangay b ON a.barangay_id = b.id
WHERE NOT EXISTS (
    SELECT 1 FROM participant_notifications pn 
    WHERE pn.blotter_case_id = bc.id AND pn.participant_id = bp.id
);

/*-------------------------------------------------------------
  SECTION 4: BLOTTER/CASE MANAGEMENT SYSTEM (IMPROVED)
  -------------------------------------------------------------*/

-- Add hearing reschedule tracking
CREATE TABLE IF NOT EXISTS hearing_reschedules (
    id INT AUTO_INCREMENT PRIMARY KEY,
    hearing_id INT NOT NULL,
    requested_by_user_id INT NOT NULL,
    requested_by_role_id INT NOT NULL,
    old_hearing_date DATETIME NOT NULL,
    new_hearing_date DATETIME NOT NULL,
    reason TEXT,
    status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending',
    approved_by_user_id INT NULL,
    approved_at DATETIME NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (hearing_id) REFERENCES case_hearings(id) ON DELETE CASCADE,
    FOREIGN KEY (requested_by_user_id) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (requested_by_role_id) REFERENCES roles(id) ON DELETE SET NULL,
    FOREIGN KEY (approved_by_user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- Add audit trail for blotter actions
CREATE TABLE IF NOT EXISTS blotter_case_audits (
    id INT AUTO_INCREMENT PRIMARY KEY,
    blotter_case_id INT NOT NULL,
    action ENUM('filed', 'accepted', 'scheduled', 'rescheduled', 'hearing_conducted', 'resolved', 'dismissed', 'endorsed', 'cfa_issued', 'notification_sent', 'notification_delivered') NOT NULL,
    performed_by_user_id INT,
    performed_by_role_id INT,
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (blotter_case_id) REFERENCES blotter_cases(id) ON DELETE CASCADE,
    FOREIGN KEY (performed_by_user_id) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (performed_by_role_id) REFERENCES roles(id) ON DELETE SET NULL
);

-- Add explicit status history for participant notifications
CREATE TABLE IF NOT EXISTS participant_notification_logs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    notification_id INT NOT NULL,
    status ENUM('pending', 'sent', 'delivered', 'failed') NOT NULL,
    changed_by_user_id INT NULL,
    remarks TEXT,
    changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (notification_id) REFERENCES participant_notifications(id) ON DELETE CASCADE,
    FOREIGN KEY (changed_by_user_id) REFERENCES users(id) ON DELETE SET NULL
);

-- Add index for hearing_reschedules
CREATE INDEX idx_hearing_reschedules_hearing ON hearing_reschedules(hearing_id);

-- Add index for blotter_case_audits
CREATE INDEX idx_blotter_case_audits_case ON blotter_case_audits(blotter_case_id);
ALTER TABLE schedule_proposals 
MODIFY COLUMN status ENUM(
    'proposed', 
    'user_confirmed', 
    'captain_confirmed', 
    'both_confirmed', 
    'conflict',
    'officer_conflict',  -- Add this new status
    'pending_user_confirmation', 
    'pending_officer_confirmation', 
    'cancelled'
) NOT NULL DEFAULT 'proposed';
/*-------------------------------------------------------------
  SECTION 7: SAMPLE DATA INSERTION (IMPROVED)
  --------------
